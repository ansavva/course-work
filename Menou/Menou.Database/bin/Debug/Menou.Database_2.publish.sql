/*
Deployment script for Menou

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Menou"
:setvar DefaultFilePrefix "Menou"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/


/* Merge statement for Restaurants */

CREATE TABLE #Restaurant
(
	[Id] INT NOT NULL PRIMARY KEY IDENTITY, 
    [Name] NVARCHAR(50) NULL, 
    [CreatedDate] DATETIME2 NOT NULL, 
    [ModifiedDate] DATETIME2 NOT NULL
)

SET IDENTITY_INSERT #Restaurant ON

INSERT INTO #Restaurant ([Id], [Name], [CreatedDate], [ModifiedDate])
VALUES (1, 'Andreas'' Itlian', GETDATE(), GETDATE())

MERGE [dbo].[Restaurant] AS T
USING #Restaurant AS S
ON (T.[Id] = S.[Id]) 
WHEN NOT MATCHED BY TARGET
    THEN INSERT([Id], [Name], [CreatedDate], [ModifiedDate])
	     VALUES(S.[Id], S.[Name], S.[CreatedDate], S.[ModifiedDate])
WHEN MATCHED 
    THEN UPDATE SET T.[Name] = S.[Name], T.[CreatedDate] = S.[CreatedDate],
	                T.[ModifiedDate] = S.[ModifiedDate]
WHEN NOT MATCHED BY SOURCE
    THEN DELETE;


/* Insert statement for MenuItems */

CREATE TABLE #MenuItem
(
	[Id] INT NOT NULL PRIMARY KEY IDENTITY, 
    [Title] NVARCHAR(50) NOT NULL, 
    [Description] NVARCHAR(100) NULL, 
    [RestaurantId] INT NULL, 
    [CreatedDate] DATETIME2 NOT NULL, 
    [ModifiedDate] DATETIME2 NOT NULL, 
)

SET IDENTITY_INSERT #MenuItem ON

INSERT INTO #MenuItem ([Id], [Title], [Description], [RestaurantId], [CreatedDate], [ModifiedDate])
VALUES (
	1,
	'Meatball Stuffed Pizza Fritta', 
	'Meatballs, mushrooms, onions, cheeses and marinara sauce wrapped in a golden fried pizza dough. Served with homemade alfredo and marinara sauces.', 
	1,
	GETDATE(), 
	GETDATE())

INSERT INTO #MenuItem ([Id], [Title], [Description], [RestaurantId], [CreatedDate], [ModifiedDate])
VALUES (
	2,
	'Spinach-Artichoke Dip', 
	'A blend of spinach, artichokes, and five cheeses served warm with breadstick crostini.', 
	1,
	GETDATE(), 
	GETDATE())

MERGE [dbo].[MenuItem] AS T
USING #MenuItem AS S
ON (T.[Id] = S.[Id]) 
WHEN NOT MATCHED BY TARGET
    THEN INSERT([Id], [Title], [Description], [RestaurantId], [CreatedDate], [ModifiedDate]) 
		 VALUES(S.[Id], S.[Name], S.[Description], [RestaurantId], [CreatedDate], [ModifiedDate])
WHEN MATCHED 
    THEN UPDATE SET T.[Name] = S.[Name], T.[Description] = S.[Description], T.[RestaurantId] = S.[RestaurantId],
	                T.[CreatedDate] = S.[CreatedDate], T.[ModifiedDate] = S.[ModifiedDate]
WHEN NOT MATCHED BY SOURCE
    THEN DELETE;
GO

GO
PRINT N'Update complete.';


GO
